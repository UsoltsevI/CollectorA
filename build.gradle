/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.4.1/userguide/tutorial_java_projects.html
 */

plugins {
    id 'java'
    id "org.springframework.boot" version "3.3.3"
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}
// In this section you declare where to find the dependencies of your project
//repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
//    jcenter()
//}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
//    compile 'org.slf4j:slf4j-api:1.7.25'
    implementation 'org.springframework.boot:spring-boot:3.3.3'
    implementation 'org.springframework.boot:spring-boot-starter:3.3.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

    implementation 'org.jsoup:jsoup:1.16.1'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
//    testCompile 'junit:junit:4.12'
}

jar {
    manifest {
        attributes 'Main-class': 'org.example.CollectorA.CollectorA'
    }
}

